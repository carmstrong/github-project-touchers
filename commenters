#!/usr/bin/env ruby

require 'csv'
require 'date'
require 'octokit'

repo = ARGV.first

# make our GitHub calls here
client = Octokit::Client.new(:access_token => ENV['GITHUB_ACCESS_TOKEN'], :auto_paginate => true)
issues = client.search_issues("repo:#{repo}", {:per_page => 10000})
prs = client.pull_requests(repo, {:per_page => 10000, :state => "all"})
comments = client.issues_comments(repo, {:per_page => 10000})

touchers = {}

issues.items.each do |issue|
  author = issue.user.login.to_s
  if touchers[author].nil?
    touchers[author] = 1
  else
    touchers[author] = touchers[author]+1
  end
end

comments.each do |c|
  author = c.user.login
  if touchers[author].nil?
    touchers[author] = 1
  else
    touchers[author] = touchers[author]+1
  end
end

prs.each do |pr|
  author = pr.user.login
  if touchers[author].nil?
    touchers[author] = 1
  else
    touchers[author] = touchers[author]+1
  end
end

repo_in_filepath = repo.gsub '/', '_'
now = Time.now.strftime("%d%m%Y%H%M%S")
outfile = "#{repo_in_filepath}-#{now}.csv"

CSV.open(outfile, "wb") do |csv|
  csv << ["id", "touches", "name", "company", "location", "email"]
  touchers.each do |id, count|
    user = client.user(id)
    csv << [id, count, user.name, user.company, user.location, user.email]
  end
end
